{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseGoods","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","resetAll","this","visibleGoods","reoderedGoods","sort","prevGood","nextGood","length","localeCompare","reverse","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CAAEH,SAAUL,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,SAAW,WACT,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QArB1D,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAY,UAAOd,GACnBe,EAAgBZ,GAAcC,IAAaL,EAASM,KAiB1D,OAfAS,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQd,GACN,KAAKL,EAASY,OACZ,OAAOM,EAASE,OAASD,EAASC,OACpC,KAAKpB,EAASU,SACZ,OAAOQ,EAASG,cAAcF,GAChC,QACE,OAAO,MAITf,GACFW,EAAaO,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASU,WAEtCgB,QAASZ,KAAKL,eANhB,iCAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASY,SAEtCc,QAASZ,KAAKH,aANhB,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASZ,KAAKP,aANhB,qBAWCS,GACC,wBACEQ,KAAK,SACLD,UAAU,8BAKVG,QAASZ,KAAKD,SAPhB,sBAcJ,6BACGE,EAAaY,KAAI,SAACC,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAlGnB,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0aec9f61.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetAll = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render(): JSX.Element {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = [...goodsFromServer];\n    const reoderedGoods = isReversed || sortType !== SortType.NONE;\n\n    visibleGoods.sort((prevGood, nextGood): number => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return prevGood.length - nextGood.length;\n        case SortType.ALPHABET:\n          return prevGood.localeCompare(nextGood);\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {reoderedGoods && (\n            <button\n              type=\"button\"\n              className=\"\n                button\n                is-danger\n                is-light\n              \"\n              onClick={this.resetAll}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good) => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}